name: Release

on:
  push:
    branches:
      - main
      - feature/*

env:
  VERSCOUT_VERSION: 1.7.0

jobs:
  pre-commit:
    name: Pre-commit
    runs-on: ubuntu-latest
    env:
      GOPROXY: "https://proxy.golang.org,direct"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Run pre-commit
        run: pip install pre-commit && make pre-commit

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Run tests
        run: make test
      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage
          path: coverage.txt
          overwrite: true

  build-linux-amd64:
    name: Build linux amd64
    runs-on: ubuntu-latest
    needs: [test, pre-commit]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Build
        run: make build-amd64
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kitadoc-backend-linux-amd64
          path: bin/kitadoc-backend-linux-amd64
          if-no-files-found: error
          overwrite: true

  build-linux-arm64:
    name: Build linux arm64
    runs-on: ubuntu-latest
    needs: [test, pre-commit]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Build
        run: make build-arm64
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kitadoc-backend-linux-arm64
          path: bin/kitadoc-backend-linux-arm64
          if-no-files-found: error
          overwrite: true

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-linux-amd64, build-linux-arm64]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Important for verscout to access git history
      - name: Download verscout
        run: |
          gh release download "$VERSCOUT_VERSION" \
            --repo erNail/verscout \
            --pattern '*linux_amd64.tar.gz'
          tar xzf "verscout_${VERSCOUT_VERSION}_linux_amd64.tar.gz"
          chmod +x verscout
          sudo mv verscout /usr/local/bin/
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Calculate next version
        id: version
        run: |
          # Check if the version is a release candidate
          suffix=""
          if [[ "$GITHUB_REF" == *"feature/"* ]]; then
              timestamp=$(date "+%Y%m%d%H%M%S")
              suffix="-rc-${timestamp}"
              echo "Release candidate version detected, suffix: $suffix"
          fi
          LATEST_VERSION=$(verscout latest)
          NEXT_VERSION=$(verscout next --first-version 0.1.0)
          if [ "$LATEST_VERSION" = "$NEXT_VERSION" ]; then
            echo "No version bump needed"
            exit 0
          fi
          if [ -z "$NEXT_VERSION" ]; then
            echo "No version bump needed"
            exit 0
          fi
          echo "version=${NEXT_VERSION}${suffix}" >> $GITHUB_OUTPUT

      - name: Download build artifacts
        uses: actions/download-artifact@v4

      - name: Add version suffix
        if: steps.version.outputs.version != ''
        run: |
          mv kitadoc-backend-linux-amd64/kitadoc-backend-linux-amd64 kitadoc-backend-linux-amd64-${{ steps.version.outputs.version }}
          mv kitadoc-backend-linux-arm64/kitadoc-backend-linux-arm64 kitadoc-backend-linux-arm64-${{ steps.version.outputs.version }}

      - name: Create GitHub Release
        if: steps.version.outputs.version != ''
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GH_PAT }}
          tag_name: "${{ steps.version.outputs.version }}"
          generate_release_notes: true
          files: |
            kitadoc-backend-linux-amd64-${{ steps.version.outputs.version }}
            kitadoc-backend-linux-arm64-${{ steps.version.outputs.version }}
